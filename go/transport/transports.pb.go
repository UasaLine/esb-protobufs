// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: proto/transports.proto

package transport

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Winner_DELIVERY_TYPE int32

const (
	Winner_courier         Winner_DELIVERY_TYPE = 0
	Winner_courier_fast    Winner_DELIVERY_TYPE = 1
	Winner_courier_fitting Winner_DELIVERY_TYPE = 2
	Winner_pickup_shop     Winner_DELIVERY_TYPE = 3
	Winner_pickup_boxberry Winner_DELIVERY_TYPE = 4
)

// Enum value maps for Winner_DELIVERY_TYPE.
var (
	Winner_DELIVERY_TYPE_name = map[int32]string{
		0: "courier",
		1: "courier_fast",
		2: "courier_fitting",
		3: "pickup_shop",
		4: "pickup_boxberry",
	}
	Winner_DELIVERY_TYPE_value = map[string]int32{
		"courier":         0,
		"courier_fast":    1,
		"courier_fitting": 2,
		"pickup_shop":     3,
		"pickup_boxberry": 4,
	}
)

func (x Winner_DELIVERY_TYPE) Enum() *Winner_DELIVERY_TYPE {
	p := new(Winner_DELIVERY_TYPE)
	*p = x
	return p
}

func (x Winner_DELIVERY_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Winner_DELIVERY_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_transports_proto_enumTypes[0].Descriptor()
}

func (Winner_DELIVERY_TYPE) Type() protoreflect.EnumType {
	return &file_proto_transports_proto_enumTypes[0]
}

func (x Winner_DELIVERY_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Winner_DELIVERY_TYPE.Descriptor instead.
func (Winner_DELIVERY_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{23, 0}
}

//Service ZONE
type Fias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fias string `protobuf:"bytes,1,opt,name=fias,proto3" json:"fias,omitempty"`
}

func (x *Fias) Reset() {
	*x = Fias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fias) ProtoMessage() {}

func (x *Fias) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fias.ProtoReflect.Descriptor instead.
func (*Fias) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{0}
}

func (x *Fias) GetFias() string {
	if x != nil {
		return x.Fias
	}
	return ""
}

type ZoneID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int32 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
}

func (x *ZoneID) Reset() {
	*x = ZoneID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneID) ProtoMessage() {}

func (x *ZoneID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneID.ProtoReflect.Descriptor instead.
func (*ZoneID) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{1}
}

func (x *ZoneID) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type GetIdByFiasesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fias []string `protobuf:"bytes,1,rep,name=fias,proto3" json:"fias,omitempty"`
}

func (x *GetIdByFiasesParams) Reset() {
	*x = GetIdByFiasesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdByFiasesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdByFiasesParams) ProtoMessage() {}

func (x *GetIdByFiasesParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdByFiasesParams.ProtoReflect.Descriptor instead.
func (*GetIdByFiasesParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{2}
}

func (x *GetIdByFiasesParams) GetFias() []string {
	if x != nil {
		return x.Fias
	}
	return nil
}

type Zone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Active  bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Created int32  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated int32  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *Zone) Reset() {
	*x = Zone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{3}
}

func (x *Zone) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Zone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Zone) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Zone) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Zone) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type GetZoneByIdParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetZoneByIdParams) Reset() {
	*x = GetZoneByIdParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZoneByIdParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZoneByIdParams) ProtoMessage() {}

func (x *GetZoneByIdParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZoneByIdParams.ProtoReflect.Descriptor instead.
func (*GetZoneByIdParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{4}
}

func (x *GetZoneByIdParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneName string `protobuf:"bytes,1,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
}

func (x *CreateParams) Reset() {
	*x = CreateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParams) ProtoMessage() {}

func (x *CreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParams.ProtoReflect.Descriptor instead.
func (*CreateParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{5}
}

func (x *CreateParams) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

type AddFiasToZoneParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int32    `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Fias   []string `protobuf:"bytes,2,rep,name=fias,proto3" json:"fias,omitempty"`
}

func (x *AddFiasToZoneParams) Reset() {
	*x = AddFiasToZoneParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFiasToZoneParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFiasToZoneParams) ProtoMessage() {}

func (x *AddFiasToZoneParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFiasToZoneParams.ProtoReflect.Descriptor instead.
func (*AddFiasToZoneParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{6}
}

func (x *AddFiasToZoneParams) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddFiasToZoneParams) GetFias() []string {
	if x != nil {
		return x.Fias
	}
	return nil
}

type OkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *OkResponse) Reset() {
	*x = OkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OkResponse) ProtoMessage() {}

func (x *OkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OkResponse.ProtoReflect.Descriptor instead.
func (*OkResponse) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{7}
}

func (x *OkResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type AllParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *AllParams) Reset() {
	*x = AllParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllParams) ProtoMessage() {}

func (x *AllParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllParams.ProtoReflect.Descriptor instead.
func (*AllParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{8}
}

func (x *AllParams) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AllParams) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type AllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Zones []*Zone `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
}

func (x *AllResponse) Reset() {
	*x = AllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllResponse) ProtoMessage() {}

func (x *AllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllResponse.ProtoReflect.Descriptor instead.
func (*AllResponse) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{9}
}

func (x *AllResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AllResponse) GetZones() []*Zone {
	if x != nil {
		return x.Zones
	}
	return nil
}

type AddManualPriorityParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId     int32   `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	TkId       int32   `protobuf:"varint,2,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	DeliveryId int32   `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Value      float32 `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	MaxDays    float32 `protobuf:"fixed32,5,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	Tariff     float32 `protobuf:"fixed32,6,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Active     bool    `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *AddManualPriorityParams) Reset() {
	*x = AddManualPriorityParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddManualPriorityParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddManualPriorityParams) ProtoMessage() {}

func (x *AddManualPriorityParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddManualPriorityParams.ProtoReflect.Descriptor instead.
func (*AddManualPriorityParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{10}
}

func (x *AddManualPriorityParams) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddManualPriorityParams) GetTkId() int32 {
	if x != nil {
		return x.TkId
	}
	return 0
}

func (x *AddManualPriorityParams) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *AddManualPriorityParams) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AddManualPriorityParams) GetMaxDays() float32 {
	if x != nil {
		return x.MaxDays
	}
	return 0
}

func (x *AddManualPriorityParams) GetTariff() float32 {
	if x != nil {
		return x.Tariff
	}
	return 0
}

func (x *AddManualPriorityParams) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ManualPriorityParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId     int32   `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	TkId       int32   `protobuf:"varint,3,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	DeliveryId int32   `protobuf:"varint,4,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Value      float32 `protobuf:"fixed32,5,opt,name=value,proto3" json:"value,omitempty"`
	MaxDays    float32 `protobuf:"fixed32,6,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	Tariff     float32 `protobuf:"fixed32,7,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Active     bool    `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	Created    int32   `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	Updated    int32   `protobuf:"varint,10,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ManualPriorityParams) Reset() {
	*x = ManualPriorityParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualPriorityParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualPriorityParams) ProtoMessage() {}

func (x *ManualPriorityParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualPriorityParams.ProtoReflect.Descriptor instead.
func (*ManualPriorityParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{11}
}

func (x *ManualPriorityParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ManualPriorityParams) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ManualPriorityParams) GetTkId() int32 {
	if x != nil {
		return x.TkId
	}
	return 0
}

func (x *ManualPriorityParams) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *ManualPriorityParams) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ManualPriorityParams) GetMaxDays() float32 {
	if x != nil {
		return x.MaxDays
	}
	return 0
}

func (x *ManualPriorityParams) GetTariff() float32 {
	if x != nil {
		return x.Tariff
	}
	return 0
}

func (x *ManualPriorityParams) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ManualPriorityParams) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ManualPriorityParams) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ManualPriorityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ManualPriorityParams `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ManualPriorityList) Reset() {
	*x = ManualPriorityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualPriorityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualPriorityList) ProtoMessage() {}

func (x *ManualPriorityList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualPriorityList.ProtoReflect.Descriptor instead.
func (*ManualPriorityList) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{12}
}

func (x *ManualPriorityList) GetList() []*ManualPriorityParams {
	if x != nil {
		return x.List
	}
	return nil
}

type ZoneDeliveryManualPriorityID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ZoneDeliveryManualPriorityID) Reset() {
	*x = ZoneDeliveryManualPriorityID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDeliveryManualPriorityID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeliveryManualPriorityID) ProtoMessage() {}

func (x *ZoneDeliveryManualPriorityID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeliveryManualPriorityID.ProtoReflect.Descriptor instead.
func (*ZoneDeliveryManualPriorityID) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{13}
}

func (x *ZoneDeliveryManualPriorityID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddDeliveryMethodParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *AddDeliveryMethodParams) Reset() {
	*x = AddDeliveryMethodParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeliveryMethodParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeliveryMethodParams) ProtoMessage() {}

func (x *AddDeliveryMethodParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeliveryMethodParams.ProtoReflect.Descriptor instead.
func (*AddDeliveryMethodParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{14}
}

func (x *AddDeliveryMethodParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetDeliveryMethodParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeliveryMethodParams) Reset() {
	*x = GetDeliveryMethodParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveryMethodParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryMethodParams) ProtoMessage() {}

func (x *GetDeliveryMethodParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryMethodParams.ProtoReflect.Descriptor instead.
func (*GetDeliveryMethodParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{15}
}

func (x *GetDeliveryMethodParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDeliveryMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Active  bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Created int32  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated int32  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *GetDeliveryMethodResponse) Reset() {
	*x = GetDeliveryMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveryMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryMethodResponse) ProtoMessage() {}

func (x *GetDeliveryMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryMethodResponse.ProtoReflect.Descriptor instead.
func (*GetDeliveryMethodResponse) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{16}
}

func (x *GetDeliveryMethodResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDeliveryMethodResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetDeliveryMethodResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *GetDeliveryMethodResponse) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *GetDeliveryMethodResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type AddZoneDeliveryMatrixParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            int32   `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	CutoffTime        string  `protobuf:"bytes,2,opt,name=cutoff_time,json=cutoffTime,proto3" json:"cutoff_time,omitempty"`
	GapDays           int32   `protobuf:"varint,3,opt,name=gap_days,json=gapDays,proto3" json:"gap_days,omitempty"`
	ConsolidationDays int32   `protobuf:"varint,4,opt,name=consolidation_days,json=consolidationDays,proto3" json:"consolidation_days,omitempty"`
	DeliveryId        int32   `protobuf:"varint,5,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	WorkDays          string  `protobuf:"bytes,6,opt,name=work_days,json=workDays,proto3" json:"work_days,omitempty"`
	Weekends          string  `protobuf:"bytes,7,opt,name=weekends,proto3" json:"weekends,omitempty"`
	Saturday          string  `protobuf:"bytes,8,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday            string  `protobuf:"bytes,9,opt,name=sunday,proto3" json:"sunday,omitempty"`
	TotalLess         float32 `protobuf:"fixed32,10,opt,name=total_less,json=totalLess,proto3" json:"total_less,omitempty"`
	TotalMore         float32 `protobuf:"fixed32,11,opt,name=total_more,json=totalMore,proto3" json:"total_more,omitempty"`
	Total             float32 `protobuf:"fixed32,12,opt,name=total,proto3" json:"total,omitempty"`
	DeliveryMinDays   int32   `protobuf:"varint,13,opt,name=delivery_min_days,json=deliveryMinDays,proto3" json:"delivery_min_days,omitempty"`
	Active            bool    `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *AddZoneDeliveryMatrixParams) Reset() {
	*x = AddZoneDeliveryMatrixParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddZoneDeliveryMatrixParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddZoneDeliveryMatrixParams) ProtoMessage() {}

func (x *AddZoneDeliveryMatrixParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddZoneDeliveryMatrixParams.ProtoReflect.Descriptor instead.
func (*AddZoneDeliveryMatrixParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{17}
}

func (x *AddZoneDeliveryMatrixParams) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetCutoffTime() string {
	if x != nil {
		return x.CutoffTime
	}
	return ""
}

func (x *AddZoneDeliveryMatrixParams) GetGapDays() int32 {
	if x != nil {
		return x.GapDays
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetConsolidationDays() int32 {
	if x != nil {
		return x.ConsolidationDays
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetWorkDays() string {
	if x != nil {
		return x.WorkDays
	}
	return ""
}

func (x *AddZoneDeliveryMatrixParams) GetWeekends() string {
	if x != nil {
		return x.Weekends
	}
	return ""
}

func (x *AddZoneDeliveryMatrixParams) GetSaturday() string {
	if x != nil {
		return x.Saturday
	}
	return ""
}

func (x *AddZoneDeliveryMatrixParams) GetSunday() string {
	if x != nil {
		return x.Sunday
	}
	return ""
}

func (x *AddZoneDeliveryMatrixParams) GetTotalLess() float32 {
	if x != nil {
		return x.TotalLess
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetTotalMore() float32 {
	if x != nil {
		return x.TotalMore
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetDeliveryMinDays() int32 {
	if x != nil {
		return x.DeliveryMinDays
	}
	return 0
}

func (x *AddZoneDeliveryMatrixParams) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ZoneDeliveryMatrixModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId            int32   `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	CutoffTime        string  `protobuf:"bytes,3,opt,name=cutoff_time,json=cutoffTime,proto3" json:"cutoff_time,omitempty"`
	GapDays           int32   `protobuf:"varint,4,opt,name=gap_days,json=gapDays,proto3" json:"gap_days,omitempty"`
	ConsolidationDays int32   `protobuf:"varint,5,opt,name=consolidation_days,json=consolidationDays,proto3" json:"consolidation_days,omitempty"`
	DeliveryId        int32   `protobuf:"varint,6,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	WorkDays          string  `protobuf:"bytes,7,opt,name=work_days,json=workDays,proto3" json:"work_days,omitempty"`
	Weekends          string  `protobuf:"bytes,8,opt,name=weekends,proto3" json:"weekends,omitempty"`
	Saturday          string  `protobuf:"bytes,9,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday            string  `protobuf:"bytes,10,opt,name=sunday,proto3" json:"sunday,omitempty"`
	TotalLess         float32 `protobuf:"fixed32,11,opt,name=total_less,json=totalLess,proto3" json:"total_less,omitempty"`
	TotalMore         float32 `protobuf:"fixed32,12,opt,name=total_more,json=totalMore,proto3" json:"total_more,omitempty"`
	Total             float32 `protobuf:"fixed32,13,opt,name=total,proto3" json:"total,omitempty"`
	DeliveryMinDays   int32   `protobuf:"varint,14,opt,name=delivery_min_days,json=deliveryMinDays,proto3" json:"delivery_min_days,omitempty"`
	Active            bool    `protobuf:"varint,15,opt,name=active,proto3" json:"active,omitempty"`
	Created           int32   `protobuf:"varint,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated           int32   `protobuf:"varint,17,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ZoneDeliveryMatrixModel) Reset() {
	*x = ZoneDeliveryMatrixModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDeliveryMatrixModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeliveryMatrixModel) ProtoMessage() {}

func (x *ZoneDeliveryMatrixModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeliveryMatrixModel.ProtoReflect.Descriptor instead.
func (*ZoneDeliveryMatrixModel) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{18}
}

func (x *ZoneDeliveryMatrixModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetCutoffTime() string {
	if x != nil {
		return x.CutoffTime
	}
	return ""
}

func (x *ZoneDeliveryMatrixModel) GetGapDays() int32 {
	if x != nil {
		return x.GapDays
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetConsolidationDays() int32 {
	if x != nil {
		return x.ConsolidationDays
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetWorkDays() string {
	if x != nil {
		return x.WorkDays
	}
	return ""
}

func (x *ZoneDeliveryMatrixModel) GetWeekends() string {
	if x != nil {
		return x.Weekends
	}
	return ""
}

func (x *ZoneDeliveryMatrixModel) GetSaturday() string {
	if x != nil {
		return x.Saturday
	}
	return ""
}

func (x *ZoneDeliveryMatrixModel) GetSunday() string {
	if x != nil {
		return x.Sunday
	}
	return ""
}

func (x *ZoneDeliveryMatrixModel) GetTotalLess() float32 {
	if x != nil {
		return x.TotalLess
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetTotalMore() float32 {
	if x != nil {
		return x.TotalMore
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetDeliveryMinDays() int32 {
	if x != nil {
		return x.DeliveryMinDays
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ZoneDeliveryMatrixModel) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ZoneDeliveryMatrixModel) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type AddZonePaymentMethodParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId     int32 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DeliveryId int32 `protobuf:"varint,2,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId  int32 `protobuf:"varint,3,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TkId       int32 `protobuf:"varint,4,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	Active     bool  `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *AddZonePaymentMethodParams) Reset() {
	*x = AddZonePaymentMethodParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddZonePaymentMethodParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddZonePaymentMethodParams) ProtoMessage() {}

func (x *AddZonePaymentMethodParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddZonePaymentMethodParams.ProtoReflect.Descriptor instead.
func (*AddZonePaymentMethodParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{19}
}

func (x *AddZonePaymentMethodParams) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddZonePaymentMethodParams) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *AddZonePaymentMethodParams) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AddZonePaymentMethodParams) GetTkId() int32 {
	if x != nil {
		return x.TkId
	}
	return 0
}

func (x *AddZonePaymentMethodParams) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ZonePaymentMethodModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId     int32 `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DeliveryId int32 `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId  int32 `protobuf:"varint,4,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TkId       int32 `protobuf:"varint,5,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	Active     bool  `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Created    int32 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated    int32 `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ZonePaymentMethodModel) Reset() {
	*x = ZonePaymentMethodModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZonePaymentMethodModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonePaymentMethodModel) ProtoMessage() {}

func (x *ZonePaymentMethodModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonePaymentMethodModel.ProtoReflect.Descriptor instead.
func (*ZonePaymentMethodModel) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{20}
}

func (x *ZonePaymentMethodModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetDeliveryId() int32 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetTkId() int32 {
	if x != nil {
		return x.TkId
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ZonePaymentMethodModel) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ZonePaymentMethodModel) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type WinnersParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeoId      string `protobuf:"bytes,1,opt,name=geo_id,json=geoId,proto3" json:"geo_id,omitempty"`
	OrderPrice int32  `protobuf:"varint,2,opt,name=order_price,json=orderPrice,proto3" json:"order_price,omitempty"`
	// enum idType {
	//     FIAS = 0;
	//     GEO_NAMES = 1;
	// }
	GeoType int32 `protobuf:"varint,3,opt,name=geo_type,json=geoType,proto3" json:"geo_type,omitempty"`
	// в рублях
	Locale string `protobuf:"bytes,4,opt,name=locale,proto3" json:"locale,omitempty"`
}

func (x *WinnersParams) Reset() {
	*x = WinnersParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinnersParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnersParams) ProtoMessage() {}

func (x *WinnersParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnersParams.ProtoReflect.Descriptor instead.
func (*WinnersParams) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{21}
}

func (x *WinnersParams) GetGeoId() string {
	if x != nil {
		return x.GeoId
	}
	return ""
}

func (x *WinnersParams) GetOrderPrice() int32 {
	if x != nil {
		return x.OrderPrice
	}
	return 0
}

func (x *WinnersParams) GetGeoType() int32 {
	if x != nil {
		return x.GeoType
	}
	return 0
}

func (x *WinnersParams) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type WinnersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Winner `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *WinnersResponse) Reset() {
	*x = WinnersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnersResponse) ProtoMessage() {}

func (x *WinnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnersResponse.ProtoReflect.Descriptor instead.
func (*WinnersResponse) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{22}
}

func (x *WinnersResponse) GetResult() []*Winner {
	if x != nil {
		return x.Result
	}
	return nil
}

type Winner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryTypeId    Winner_DELIVERY_TYPE `protobuf:"varint,1,opt,name=delivery_type_id,json=deliveryTypeId,proto3,enum=transport.Winner_DELIVERY_TYPE" json:"delivery_type_id,omitempty"`
	DeliveryTypeTitle string               `protobuf:"bytes,2,opt,name=delivery_type_title,json=deliveryTypeTitle,proto3" json:"delivery_type_title,omitempty"`
	WinnerCompany     *DeliveryCompany     `protobuf:"bytes,3,opt,name=winner_company,json=winnerCompany,proto3" json:"winner_company,omitempty"`
	Payments          []*PaymentType       `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	// 'YYYY-MM-DD'
	DeliveryDate []*DeliveryTime `protobuf:"bytes,6,rep,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
}

func (x *Winner) Reset() {
	*x = Winner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Winner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Winner) ProtoMessage() {}

func (x *Winner) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Winner.ProtoReflect.Descriptor instead.
func (*Winner) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{23}
}

func (x *Winner) GetDeliveryTypeId() Winner_DELIVERY_TYPE {
	if x != nil {
		return x.DeliveryTypeId
	}
	return Winner_courier
}

func (x *Winner) GetDeliveryTypeTitle() string {
	if x != nil {
		return x.DeliveryTypeTitle
	}
	return ""
}

func (x *Winner) GetWinnerCompany() *DeliveryCompany {
	if x != nil {
		return x.WinnerCompany
	}
	return nil
}

func (x *Winner) GetPayments() []*PaymentType {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Winner) GetDeliveryDate() []*DeliveryTime {
	if x != nil {
		return x.DeliveryDate
	}
	return nil
}

type DeliveryCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *DeliveryCompany) Reset() {
	*x = DeliveryCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryCompany) ProtoMessage() {}

func (x *DeliveryCompany) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryCompany.ProtoReflect.Descriptor instead.
func (*DeliveryCompany) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{24}
}

func (x *DeliveryCompany) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeliveryCompany) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PaymentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DeliveryPrice int32  `protobuf:"varint,3,opt,name=delivery_price,json=deliveryPrice,proto3" json:"delivery_price,omitempty"`
}

func (x *PaymentType) Reset() {
	*x = PaymentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentType) ProtoMessage() {}

func (x *PaymentType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentType.ProtoReflect.Descriptor instead.
func (*PaymentType) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{25}
}

func (x *PaymentType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PaymentType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PaymentType) GetDeliveryPrice() int32 {
	if x != nil {
		return x.DeliveryPrice
	}
	return 0
}

type DeliveryTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string      `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Intervals []*Interval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *DeliveryTime) Reset() {
	*x = DeliveryTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryTime) ProtoMessage() {}

func (x *DeliveryTime) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryTime.ProtoReflect.Descriptor instead.
func (*DeliveryTime) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{26}
}

func (x *DeliveryTime) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DeliveryTime) GetIntervals() []*Interval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 10:30 for example
	TimeFrom string `protobuf:"bytes,1,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo   string `protobuf:"bytes,2,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_transports_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transports_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_proto_transports_proto_rawDescGZIP(), []int{27}
}

func (x *Interval) GetTimeFrom() string {
	if x != nil {
		return x.TimeFrom
	}
	return ""
}

func (x *Interval) GetTimeTo() string {
	if x != nil {
		return x.TimeTo
	}
	return ""
}

var File_proto_transports_proto protoreflect.FileDescriptor

var file_proto_transports_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x46, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x61, 0x73, 0x22,
	0x21, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x46, 0x69, 0x61,
	0x73, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x61, 0x73, 0x22, 0x76, 0x0a,
	0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a,
	0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x61, 0x73, 0x54, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x61, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x4f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x39, 0x0a, 0x09, 0x41, 0x6c, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x7a, 0x6f, 0x6e,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x22, 0xc9, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x8a, 0x02, 0x0a,
	0x14, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x13,
	0x0a, 0x05, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x8d, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0xc7, 0x03, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x74,
	0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61,
	0x70, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x61,
	0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75,
	0x6e, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64,
	0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x87, 0x04, 0x0a, 0x17, 0x5a,
	0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x70, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x67, 0x61, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x5a, 0x6f, 0x6e, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6b, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x16, 0x5a, 0x6f,
	0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6b,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x7a,
	0x0a, 0x0d, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x67, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x65, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x57, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x06, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41,
	0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x69, 0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x73,
	0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x66,
	0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x70, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x62, 0x6f, 0x78, 0x62, 0x65, 0x72, 0x72, 0x79, 0x10, 0x04, 0x22, 0x3b,
	0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5e, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x31, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x73, 0x22, 0x40, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69,
	0x6d, 0x65, 0x54, 0x6f, 0x32, 0xe5, 0x03, 0x0a, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x46, 0x69, 0x61, 0x73, 0x12, 0x0f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x61, 0x73, 0x1a, 0x11,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x49,
	0x44, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x46, 0x69,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x46, 0x69, 0x61, 0x73, 0x65, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x11, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x46, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x03, 0x41,
	0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x1a, 0x15, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e,
	0x65, 0x49, 0x44, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa3, 0x02, 0x0a,
	0x12, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x49,
	0x44, 0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x44, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0xb7, 0x02, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x42, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x15, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb6, 0x02, 0x0a,
	0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x42,
	0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xbb, 0x02, 0x0a, 0x12, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x46, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0xb6, 0x02, 0x0a, 0x11, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x45, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x12, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x15, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x5a, 0x6f, 0x6e,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x53, 0x0a, 0x10,
	0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_transports_proto_rawDescOnce sync.Once
	file_proto_transports_proto_rawDescData = file_proto_transports_proto_rawDesc
)

func file_proto_transports_proto_rawDescGZIP() []byte {
	file_proto_transports_proto_rawDescOnce.Do(func() {
		file_proto_transports_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_transports_proto_rawDescData)
	})
	return file_proto_transports_proto_rawDescData
}

var file_proto_transports_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_transports_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_transports_proto_goTypes = []interface{}{
	(Winner_DELIVERY_TYPE)(0),            // 0: transport.winner.DELIVERY_TYPE
	(*Fias)(nil),                         // 1: transport.Fias
	(*ZoneID)(nil),                       // 2: transport.ZoneID
	(*GetIdByFiasesParams)(nil),          // 3: transport.GetIdByFiasesParams
	(*Zone)(nil),                         // 4: transport.Zone
	(*GetZoneByIdParams)(nil),            // 5: transport.GetZoneByIdParams
	(*CreateParams)(nil),                 // 6: transport.CreateParams
	(*AddFiasToZoneParams)(nil),          // 7: transport.AddFiasToZoneParams
	(*OkResponse)(nil),                   // 8: transport.OkResponse
	(*AllParams)(nil),                    // 9: transport.AllParams
	(*AllResponse)(nil),                  // 10: transport.AllResponse
	(*AddManualPriorityParams)(nil),      // 11: transport.AddManualPriorityParams
	(*ManualPriorityParams)(nil),         // 12: transport.ManualPriorityParams
	(*ManualPriorityList)(nil),           // 13: transport.ManualPriorityList
	(*ZoneDeliveryManualPriorityID)(nil), // 14: transport.ZoneDeliveryManualPriorityID
	(*AddDeliveryMethodParams)(nil),      // 15: transport.AddDeliveryMethodParams
	(*GetDeliveryMethodParams)(nil),      // 16: transport.GetDeliveryMethodParams
	(*GetDeliveryMethodResponse)(nil),    // 17: transport.GetDeliveryMethodResponse
	(*AddZoneDeliveryMatrixParams)(nil),  // 18: transport.AddZoneDeliveryMatrixParams
	(*ZoneDeliveryMatrixModel)(nil),      // 19: transport.ZoneDeliveryMatrixModel
	(*AddZonePaymentMethodParams)(nil),   // 20: transport.AddZonePaymentMethodParams
	(*ZonePaymentMethodModel)(nil),       // 21: transport.ZonePaymentMethodModel
	(*WinnersParams)(nil),                // 22: transport.WinnersParams
	(*WinnersResponse)(nil),              // 23: transport.WinnersResponse
	(*Winner)(nil),                       // 24: transport.winner
	(*DeliveryCompany)(nil),              // 25: transport.deliveryCompany
	(*PaymentType)(nil),                  // 26: transport.paymentType
	(*DeliveryTime)(nil),                 // 27: transport.deliveryTime
	(*Interval)(nil),                     // 28: transport.Interval
}
var file_proto_transports_proto_depIdxs = []int32{
	4,  // 0: transport.AllResponse.zones:type_name -> transport.Zone
	12, // 1: transport.ManualPriorityList.list:type_name -> transport.ManualPriorityParams
	24, // 2: transport.WinnersResponse.result:type_name -> transport.winner
	0,  // 3: transport.winner.delivery_type_id:type_name -> transport.winner.DELIVERY_TYPE
	25, // 4: transport.winner.winner_company:type_name -> transport.deliveryCompany
	26, // 5: transport.winner.payments:type_name -> transport.paymentType
	27, // 6: transport.winner.delivery_date:type_name -> transport.deliveryTime
	28, // 7: transport.deliveryTime.intervals:type_name -> transport.Interval
	1,  // 8: transport.Zones.GetIdByFias:input_type -> transport.Fias
	3,  // 9: transport.Zones.GetIdByFiases:input_type -> transport.GetIdByFiasesParams
	5,  // 10: transport.Zones.GetZoneById:input_type -> transport.GetZoneByIdParams
	6,  // 11: transport.Zones.Create:input_type -> transport.CreateParams
	7,  // 12: transport.Zones.AddFiasToZone:input_type -> transport.AddFiasToZoneParams
	9,  // 13: transport.Zones.All:input_type -> transport.AllParams
	4,  // 14: transport.Zones.Update:input_type -> transport.Zone
	2,  // 15: transport.Zones.Delete:input_type -> transport.ZoneID
	11, // 16: transport.ZoneManualPriority.Add:input_type -> transport.AddManualPriorityParams
	2,  // 17: transport.ZoneManualPriority.Get:input_type -> transport.ZoneID
	12, // 18: transport.ZoneManualPriority.Update:input_type -> transport.ManualPriorityParams
	14, // 19: transport.ZoneManualPriority.Delete:input_type -> transport.ZoneDeliveryManualPriorityID
	15, // 20: transport.DeliveryMethod.Add:input_type -> transport.AddDeliveryMethodParams
	16, // 21: transport.DeliveryMethod.Get:input_type -> transport.GetDeliveryMethodParams
	17, // 22: transport.DeliveryMethod.Update:input_type -> transport.GetDeliveryMethodResponse
	16, // 23: transport.DeliveryMethod.Delete:input_type -> transport.GetDeliveryMethodParams
	15, // 24: transport.PaymentMethod.Add:input_type -> transport.AddDeliveryMethodParams
	16, // 25: transport.PaymentMethod.Get:input_type -> transport.GetDeliveryMethodParams
	17, // 26: transport.PaymentMethod.Update:input_type -> transport.GetDeliveryMethodResponse
	16, // 27: transport.PaymentMethod.Delete:input_type -> transport.GetDeliveryMethodParams
	18, // 28: transport.ZoneDeliveryMatrix.Add:input_type -> transport.AddZoneDeliveryMatrixParams
	16, // 29: transport.ZoneDeliveryMatrix.Get:input_type -> transport.GetDeliveryMethodParams
	19, // 30: transport.ZoneDeliveryMatrix.Update:input_type -> transport.ZoneDeliveryMatrixModel
	19, // 31: transport.ZoneDeliveryMatrix.Delete:input_type -> transport.ZoneDeliveryMatrixModel
	20, // 32: transport.ZonePaymentMethod.Add:input_type -> transport.AddZonePaymentMethodParams
	16, // 33: transport.ZonePaymentMethod.Get:input_type -> transport.GetDeliveryMethodParams
	21, // 34: transport.ZonePaymentMethod.Update:input_type -> transport.ZonePaymentMethodModel
	21, // 35: transport.ZonePaymentMethod.Delete:input_type -> transport.ZonePaymentMethodModel
	22, // 36: transport.WinnersCompanies.Winners:input_type -> transport.WinnersParams
	2,  // 37: transport.Zones.GetIdByFias:output_type -> transport.ZoneID
	2,  // 38: transport.Zones.GetIdByFiases:output_type -> transport.ZoneID
	4,  // 39: transport.Zones.GetZoneById:output_type -> transport.Zone
	2,  // 40: transport.Zones.Create:output_type -> transport.ZoneID
	8,  // 41: transport.Zones.AddFiasToZone:output_type -> transport.OkResponse
	10, // 42: transport.Zones.All:output_type -> transport.AllResponse
	8,  // 43: transport.Zones.Update:output_type -> transport.OkResponse
	8,  // 44: transport.Zones.Delete:output_type -> transport.OkResponse
	8,  // 45: transport.ZoneManualPriority.Add:output_type -> transport.OkResponse
	13, // 46: transport.ZoneManualPriority.Get:output_type -> transport.ManualPriorityList
	8,  // 47: transport.ZoneManualPriority.Update:output_type -> transport.OkResponse
	8,  // 48: transport.ZoneManualPriority.Delete:output_type -> transport.OkResponse
	8,  // 49: transport.DeliveryMethod.Add:output_type -> transport.OkResponse
	17, // 50: transport.DeliveryMethod.Get:output_type -> transport.GetDeliveryMethodResponse
	8,  // 51: transport.DeliveryMethod.Update:output_type -> transport.OkResponse
	8,  // 52: transport.DeliveryMethod.Delete:output_type -> transport.OkResponse
	8,  // 53: transport.PaymentMethod.Add:output_type -> transport.OkResponse
	17, // 54: transport.PaymentMethod.Get:output_type -> transport.GetDeliveryMethodResponse
	8,  // 55: transport.PaymentMethod.Update:output_type -> transport.OkResponse
	8,  // 56: transport.PaymentMethod.Delete:output_type -> transport.OkResponse
	8,  // 57: transport.ZoneDeliveryMatrix.Add:output_type -> transport.OkResponse
	19, // 58: transport.ZoneDeliveryMatrix.Get:output_type -> transport.ZoneDeliveryMatrixModel
	8,  // 59: transport.ZoneDeliveryMatrix.Update:output_type -> transport.OkResponse
	8,  // 60: transport.ZoneDeliveryMatrix.Delete:output_type -> transport.OkResponse
	8,  // 61: transport.ZonePaymentMethod.Add:output_type -> transport.OkResponse
	21, // 62: transport.ZonePaymentMethod.Get:output_type -> transport.ZonePaymentMethodModel
	8,  // 63: transport.ZonePaymentMethod.Update:output_type -> transport.OkResponse
	8,  // 64: transport.ZonePaymentMethod.Delete:output_type -> transport.OkResponse
	23, // 65: transport.WinnersCompanies.Winners:output_type -> transport.WinnersResponse
	37, // [37:66] is the sub-list for method output_type
	8,  // [8:37] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_transports_proto_init() }
func file_proto_transports_proto_init() {
	if File_proto_transports_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_transports_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdByFiasesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZoneByIdParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFiasToZoneParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddManualPriorityParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualPriorityParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualPriorityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDeliveryManualPriorityID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeliveryMethodParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeliveryMethodParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeliveryMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddZoneDeliveryMatrixParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDeliveryMatrixModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddZonePaymentMethodParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZonePaymentMethodModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinnersParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinnersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Winner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_transports_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_transports_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_proto_transports_proto_goTypes,
		DependencyIndexes: file_proto_transports_proto_depIdxs,
		EnumInfos:         file_proto_transports_proto_enumTypes,
		MessageInfos:      file_proto_transports_proto_msgTypes,
	}.Build()
	File_proto_transports_proto = out.File
	file_proto_transports_proto_rawDesc = nil
	file_proto_transports_proto_goTypes = nil
	file_proto_transports_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ZonesClient is the client API for Zones service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZonesClient interface {
	GetIdByFias(ctx context.Context, in *Fias, opts ...grpc.CallOption) (*ZoneID, error)
	GetIdByFiases(ctx context.Context, in *GetIdByFiasesParams, opts ...grpc.CallOption) (*ZoneID, error)
	GetZoneById(ctx context.Context, in *GetZoneByIdParams, opts ...grpc.CallOption) (*Zone, error)
	Create(ctx context.Context, in *CreateParams, opts ...grpc.CallOption) (*ZoneID, error)
	AddFiasToZone(ctx context.Context, in *AddFiasToZoneParams, opts ...grpc.CallOption) (*OkResponse, error)
	All(ctx context.Context, in *AllParams, opts ...grpc.CallOption) (*AllResponse, error)
	Update(ctx context.Context, in *Zone, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zonesClient struct {
	cc grpc.ClientConnInterface
}

func NewZonesClient(cc grpc.ClientConnInterface) ZonesClient {
	return &zonesClient{cc}
}

func (c *zonesClient) GetIdByFias(ctx context.Context, in *Fias, opts ...grpc.CallOption) (*ZoneID, error) {
	out := new(ZoneID)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetIdByFias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) GetIdByFiases(ctx context.Context, in *GetIdByFiasesParams, opts ...grpc.CallOption) (*ZoneID, error) {
	out := new(ZoneID)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetIdByFiases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) GetZoneById(ctx context.Context, in *GetZoneByIdParams, opts ...grpc.CallOption) (*Zone, error) {
	out := new(Zone)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetZoneById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Create(ctx context.Context, in *CreateParams, opts ...grpc.CallOption) (*ZoneID, error) {
	out := new(ZoneID)
	err := c.cc.Invoke(ctx, "/transport.Zones/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) AddFiasToZone(ctx context.Context, in *AddFiasToZoneParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/AddFiasToZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) All(ctx context.Context, in *AllParams, opts ...grpc.CallOption) (*AllResponse, error) {
	out := new(AllResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/All", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Update(ctx context.Context, in *Zone, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Delete(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZonesServer is the server API for Zones service.
type ZonesServer interface {
	GetIdByFias(context.Context, *Fias) (*ZoneID, error)
	GetIdByFiases(context.Context, *GetIdByFiasesParams) (*ZoneID, error)
	GetZoneById(context.Context, *GetZoneByIdParams) (*Zone, error)
	Create(context.Context, *CreateParams) (*ZoneID, error)
	AddFiasToZone(context.Context, *AddFiasToZoneParams) (*OkResponse, error)
	All(context.Context, *AllParams) (*AllResponse, error)
	Update(context.Context, *Zone) (*OkResponse, error)
	Delete(context.Context, *ZoneID) (*OkResponse, error)
}

// UnimplementedZonesServer can be embedded to have forward compatible implementations.
type UnimplementedZonesServer struct {
}

func (*UnimplementedZonesServer) GetIdByFias(context.Context, *Fias) (*ZoneID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdByFias not implemented")
}
func (*UnimplementedZonesServer) GetIdByFiases(context.Context, *GetIdByFiasesParams) (*ZoneID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdByFiases not implemented")
}
func (*UnimplementedZonesServer) GetZoneById(context.Context, *GetZoneByIdParams) (*Zone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetZoneById not implemented")
}
func (*UnimplementedZonesServer) Create(context.Context, *CreateParams) (*ZoneID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedZonesServer) AddFiasToZone(context.Context, *AddFiasToZoneParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFiasToZone not implemented")
}
func (*UnimplementedZonesServer) All(context.Context, *AllParams) (*AllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method All not implemented")
}
func (*UnimplementedZonesServer) Update(context.Context, *Zone) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZonesServer) Delete(context.Context, *ZoneID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZonesServer(s *grpc.Server, srv ZonesServer) {
	s.RegisterService(&_Zones_serviceDesc, srv)
}

func _Zones_GetIdByFias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fias)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetIdByFias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetIdByFias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetIdByFias(ctx, req.(*Fias))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_GetIdByFiases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIdByFiasesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetIdByFiases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetIdByFiases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetIdByFiases(ctx, req.(*GetIdByFiasesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_GetZoneById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZoneByIdParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetZoneById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetZoneById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetZoneById(ctx, req.(*GetZoneByIdParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Create(ctx, req.(*CreateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_AddFiasToZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFiasToZoneParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).AddFiasToZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/AddFiasToZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).AddFiasToZone(ctx, req.(*AddFiasToZoneParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).All(ctx, req.(*AllParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Zone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Update(ctx, req.(*Zone))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Delete(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Zones_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.Zones",
	HandlerType: (*ZonesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIdByFias",
			Handler:    _Zones_GetIdByFias_Handler,
		},
		{
			MethodName: "GetIdByFiases",
			Handler:    _Zones_GetIdByFiases_Handler,
		},
		{
			MethodName: "GetZoneById",
			Handler:    _Zones_GetZoneById_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Zones_Create_Handler,
		},
		{
			MethodName: "AddFiasToZone",
			Handler:    _Zones_AddFiasToZone_Handler,
		},
		{
			MethodName: "All",
			Handler:    _Zones_All_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Zones_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Zones_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZoneManualPriorityClient is the client API for ZoneManualPriority service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneManualPriorityClient interface {
	Add(ctx context.Context, in *AddManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ManualPriorityList, error)
	Update(ctx context.Context, in *ManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ZoneDeliveryManualPriorityID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zoneManualPriorityClient struct {
	cc grpc.ClientConnInterface
}

func NewZoneManualPriorityClient(cc grpc.ClientConnInterface) ZoneManualPriorityClient {
	return &zoneManualPriorityClient{cc}
}

func (c *zoneManualPriorityClient) Add(ctx context.Context, in *AddManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ManualPriorityList, error) {
	out := new(ManualPriorityList)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Update(ctx context.Context, in *ManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Delete(ctx context.Context, in *ZoneDeliveryManualPriorityID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneManualPriorityServer is the server API for ZoneManualPriority service.
type ZoneManualPriorityServer interface {
	Add(context.Context, *AddManualPriorityParams) (*OkResponse, error)
	Get(context.Context, *ZoneID) (*ManualPriorityList, error)
	Update(context.Context, *ManualPriorityParams) (*OkResponse, error)
	Delete(context.Context, *ZoneDeliveryManualPriorityID) (*OkResponse, error)
}

// UnimplementedZoneManualPriorityServer can be embedded to have forward compatible implementations.
type UnimplementedZoneManualPriorityServer struct {
}

func (*UnimplementedZoneManualPriorityServer) Add(context.Context, *AddManualPriorityParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Get(context.Context, *ZoneID) (*ManualPriorityList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Update(context.Context, *ManualPriorityParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Delete(context.Context, *ZoneDeliveryManualPriorityID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZoneManualPriorityServer(s *grpc.Server, srv ZoneManualPriorityServer) {
	s.RegisterService(&_ZoneManualPriority_serviceDesc, srv)
}

func _ZoneManualPriority_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddManualPriorityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Add(ctx, req.(*AddManualPriorityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Get(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManualPriorityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Update(ctx, req.(*ManualPriorityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneDeliveryManualPriorityID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Delete(ctx, req.(*ZoneDeliveryManualPriorityID))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneManualPriority_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZoneManualPriority",
	HandlerType: (*ZoneManualPriorityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZoneManualPriority_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZoneManualPriority_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZoneManualPriority_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZoneManualPriority_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// DeliveryMethodClient is the client API for DeliveryMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeliveryMethodClient interface {
	Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error)
	Update(ctx context.Context, in *GetDeliveryMethodResponse, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
}

type deliveryMethodClient struct {
	cc grpc.ClientConnInterface
}

func NewDeliveryMethodClient(cc grpc.ClientConnInterface) DeliveryMethodClient {
	return &deliveryMethodClient{cc}
}

func (c *deliveryMethodClient) Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error) {
	out := new(GetDeliveryMethodResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Update(ctx context.Context, in *GetDeliveryMethodResponse, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Delete(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeliveryMethodServer is the server API for DeliveryMethod service.
type DeliveryMethodServer interface {
	Add(context.Context, *AddDeliveryMethodParams) (*OkResponse, error)
	Get(context.Context, *GetDeliveryMethodParams) (*GetDeliveryMethodResponse, error)
	Update(context.Context, *GetDeliveryMethodResponse) (*OkResponse, error)
	Delete(context.Context, *GetDeliveryMethodParams) (*OkResponse, error)
}

// UnimplementedDeliveryMethodServer can be embedded to have forward compatible implementations.
type UnimplementedDeliveryMethodServer struct {
}

func (*UnimplementedDeliveryMethodServer) Add(context.Context, *AddDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedDeliveryMethodServer) Get(context.Context, *GetDeliveryMethodParams) (*GetDeliveryMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeliveryMethodServer) Update(context.Context, *GetDeliveryMethodResponse) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeliveryMethodServer) Delete(context.Context, *GetDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDeliveryMethodServer(s *grpc.Server, srv DeliveryMethodServer) {
	s.RegisterService(&_DeliveryMethod_serviceDesc, srv)
}

func _DeliveryMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Add(ctx, req.(*AddDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Get(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Update(ctx, req.(*GetDeliveryMethodResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Delete(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeliveryMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.DeliveryMethod",
	HandlerType: (*DeliveryMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _DeliveryMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DeliveryMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeliveryMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeliveryMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// PaymentMethodClient is the client API for PaymentMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentMethodClient interface {
	Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error)
	Update(ctx context.Context, in *GetDeliveryMethodResponse, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
}

type paymentMethodClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentMethodClient(cc grpc.ClientConnInterface) PaymentMethodClient {
	return &paymentMethodClient{cc}
}

func (c *paymentMethodClient) Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error) {
	out := new(GetDeliveryMethodResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Update(ctx context.Context, in *GetDeliveryMethodResponse, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Delete(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentMethodServer is the server API for PaymentMethod service.
type PaymentMethodServer interface {
	Add(context.Context, *AddDeliveryMethodParams) (*OkResponse, error)
	Get(context.Context, *GetDeliveryMethodParams) (*GetDeliveryMethodResponse, error)
	Update(context.Context, *GetDeliveryMethodResponse) (*OkResponse, error)
	Delete(context.Context, *GetDeliveryMethodParams) (*OkResponse, error)
}

// UnimplementedPaymentMethodServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentMethodServer struct {
}

func (*UnimplementedPaymentMethodServer) Add(context.Context, *AddDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedPaymentMethodServer) Get(context.Context, *GetDeliveryMethodParams) (*GetDeliveryMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPaymentMethodServer) Update(context.Context, *GetDeliveryMethodResponse) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPaymentMethodServer) Delete(context.Context, *GetDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPaymentMethodServer(s *grpc.Server, srv PaymentMethodServer) {
	s.RegisterService(&_PaymentMethod_serviceDesc, srv)
}

func _PaymentMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Add(ctx, req.(*AddDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Get(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Update(ctx, req.(*GetDeliveryMethodResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Delete(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.PaymentMethod",
	HandlerType: (*PaymentMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _PaymentMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PaymentMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PaymentMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PaymentMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZoneDeliveryMatrixClient is the client API for ZoneDeliveryMatrix service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneDeliveryMatrixClient interface {
	Add(ctx context.Context, in *AddZoneDeliveryMatrixParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*ZoneDeliveryMatrixModel, error)
	Update(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error)
}

type zoneDeliveryMatrixClient struct {
	cc grpc.ClientConnInterface
}

func NewZoneDeliveryMatrixClient(cc grpc.ClientConnInterface) ZoneDeliveryMatrixClient {
	return &zoneDeliveryMatrixClient{cc}
}

func (c *zoneDeliveryMatrixClient) Add(ctx context.Context, in *AddZoneDeliveryMatrixParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*ZoneDeliveryMatrixModel, error) {
	out := new(ZoneDeliveryMatrixModel)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Update(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Delete(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneDeliveryMatrixServer is the server API for ZoneDeliveryMatrix service.
type ZoneDeliveryMatrixServer interface {
	Add(context.Context, *AddZoneDeliveryMatrixParams) (*OkResponse, error)
	Get(context.Context, *GetDeliveryMethodParams) (*ZoneDeliveryMatrixModel, error)
	Update(context.Context, *ZoneDeliveryMatrixModel) (*OkResponse, error)
	Delete(context.Context, *ZoneDeliveryMatrixModel) (*OkResponse, error)
}

// UnimplementedZoneDeliveryMatrixServer can be embedded to have forward compatible implementations.
type UnimplementedZoneDeliveryMatrixServer struct {
}

func (*UnimplementedZoneDeliveryMatrixServer) Add(context.Context, *AddZoneDeliveryMatrixParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Get(context.Context, *GetDeliveryMethodParams) (*ZoneDeliveryMatrixModel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Update(context.Context, *ZoneDeliveryMatrixModel) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Delete(context.Context, *ZoneDeliveryMatrixModel) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZoneDeliveryMatrixServer(s *grpc.Server, srv ZoneDeliveryMatrixServer) {
	s.RegisterService(&_ZoneDeliveryMatrix_serviceDesc, srv)
}

func _ZoneDeliveryMatrix_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddZoneDeliveryMatrixParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Add(ctx, req.(*AddZoneDeliveryMatrixParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Get(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneDeliveryMatrixModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Update(ctx, req.(*ZoneDeliveryMatrixModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneDeliveryMatrixModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Delete(ctx, req.(*ZoneDeliveryMatrixModel))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneDeliveryMatrix_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZoneDeliveryMatrix",
	HandlerType: (*ZoneDeliveryMatrixServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZoneDeliveryMatrix_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZoneDeliveryMatrix_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZoneDeliveryMatrix_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZoneDeliveryMatrix_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZonePaymentMethodClient is the client API for ZonePaymentMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZonePaymentMethodClient interface {
	Add(ctx context.Context, in *AddZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*ZonePaymentMethodModel, error)
	Update(ctx context.Context, in *ZonePaymentMethodModel, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ZonePaymentMethodModel, opts ...grpc.CallOption) (*OkResponse, error)
}

type zonePaymentMethodClient struct {
	cc grpc.ClientConnInterface
}

func NewZonePaymentMethodClient(cc grpc.ClientConnInterface) ZonePaymentMethodClient {
	return &zonePaymentMethodClient{cc}
}

func (c *zonePaymentMethodClient) Add(ctx context.Context, in *AddZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Get(ctx context.Context, in *GetDeliveryMethodParams, opts ...grpc.CallOption) (*ZonePaymentMethodModel, error) {
	out := new(ZonePaymentMethodModel)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Update(ctx context.Context, in *ZonePaymentMethodModel, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Delete(ctx context.Context, in *ZonePaymentMethodModel, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZonePaymentMethodServer is the server API for ZonePaymentMethod service.
type ZonePaymentMethodServer interface {
	Add(context.Context, *AddZonePaymentMethodParams) (*OkResponse, error)
	Get(context.Context, *GetDeliveryMethodParams) (*ZonePaymentMethodModel, error)
	Update(context.Context, *ZonePaymentMethodModel) (*OkResponse, error)
	Delete(context.Context, *ZonePaymentMethodModel) (*OkResponse, error)
}

// UnimplementedZonePaymentMethodServer can be embedded to have forward compatible implementations.
type UnimplementedZonePaymentMethodServer struct {
}

func (*UnimplementedZonePaymentMethodServer) Add(context.Context, *AddZonePaymentMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Get(context.Context, *GetDeliveryMethodParams) (*ZonePaymentMethodModel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Update(context.Context, *ZonePaymentMethodModel) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Delete(context.Context, *ZonePaymentMethodModel) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZonePaymentMethodServer(s *grpc.Server, srv ZonePaymentMethodServer) {
	s.RegisterService(&_ZonePaymentMethod_serviceDesc, srv)
}

func _ZonePaymentMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddZonePaymentMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Add(ctx, req.(*AddZonePaymentMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Get(ctx, req.(*GetDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZonePaymentMethodModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Update(ctx, req.(*ZonePaymentMethodModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZonePaymentMethodModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Delete(ctx, req.(*ZonePaymentMethodModel))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZonePaymentMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZonePaymentMethod",
	HandlerType: (*ZonePaymentMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZonePaymentMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZonePaymentMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZonePaymentMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZonePaymentMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// WinnersCompaniesClient is the client API for WinnersCompanies service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WinnersCompaniesClient interface {
	Winners(ctx context.Context, in *WinnersParams, opts ...grpc.CallOption) (*WinnersResponse, error)
}

type winnersCompaniesClient struct {
	cc grpc.ClientConnInterface
}

func NewWinnersCompaniesClient(cc grpc.ClientConnInterface) WinnersCompaniesClient {
	return &winnersCompaniesClient{cc}
}

func (c *winnersCompaniesClient) Winners(ctx context.Context, in *WinnersParams, opts ...grpc.CallOption) (*WinnersResponse, error) {
	out := new(WinnersResponse)
	err := c.cc.Invoke(ctx, "/transport.WinnersCompanies/Winners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WinnersCompaniesServer is the server API for WinnersCompanies service.
type WinnersCompaniesServer interface {
	Winners(context.Context, *WinnersParams) (*WinnersResponse, error)
}

// UnimplementedWinnersCompaniesServer can be embedded to have forward compatible implementations.
type UnimplementedWinnersCompaniesServer struct {
}

func (*UnimplementedWinnersCompaniesServer) Winners(context.Context, *WinnersParams) (*WinnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Winners not implemented")
}

func RegisterWinnersCompaniesServer(s *grpc.Server, srv WinnersCompaniesServer) {
	s.RegisterService(&_WinnersCompanies_serviceDesc, srv)
}

func _WinnersCompanies_Winners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WinnersParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WinnersCompaniesServer).Winners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.WinnersCompanies/Winners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WinnersCompaniesServer).Winners(ctx, req.(*WinnersParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _WinnersCompanies_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.WinnersCompanies",
	HandlerType: (*WinnersCompaniesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Winners",
			Handler:    _WinnersCompanies_Winners_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}
